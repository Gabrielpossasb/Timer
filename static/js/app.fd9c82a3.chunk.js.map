{"version":3,"sources":["assets/alarme1.mp3","assets/alarme2.mp3","assets/alarme3.mp3","Contador.js","App.js"],"names":["module","exports","Contador","props","done","formatarNumero","number","useEffect","timer","setInterval","setarSegundos","segundos","minutos","setarMinutos","setarEstado","a","async","sound","Audio","Sound","alarmes","map","val","selecionado","alarme","file","loadAsync","playAsync","playSound","clearInterval","View","style","styles","container","StatusBar","LinearGradient","colors","position","left","right","top","height","flexDirection","Text","textContador","TouchableOpacity","onPress","setarEstados","btnIniciar","borderRadius","zIndex","textAlign","marginTop","fontSize","color","StyleSheet","create","flex","alignItems","justifyContent","width","borderColor","borderWidth","App","useState","estado","id","som","require","alarmeSound","setarAlarmeSound","setarAlarme","alarmesTemp","backgroundColor","fontFamily","padding","TextInput","onChangeText","value","marginRight","bntSoundAlarmSelecionado","bntSoundAlarm"],"mappings":"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","file":"static/js/app.fd9c82a3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/alarme1.40c7b201.mp3\";","module.exports = __webpack_public_path__ + \"static/media/alarme2.f0c9d8c5.mp3\";","module.exports = __webpack_public_path__ + \"static/media/alarme3.642a259f.mp3\";","import { Audio } from 'expo-av';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { StyleSheet, Alert, TextInput, Pressable, TouchableHighlight, Modal, ScrollView, \r\n  Text, View, ImageBackground, TouchableOpacity, Picker } from 'react-native';\r\n//import { useFonts, Aclonica_400Regular } from '@expo-google-fonts/aclonica';\r\n//import AppLoading from 'expo-app-loading';\r\nimport React, {useState, useEffect} from 'react';\r\n//import { AntDesign } from '@expo/vector-icons';\r\n \r\nexport default function Contador(props) {\r\n \r\n  var done = false;\r\n\r\n  useEffect(()=>{\r\n\r\n    const timer = setInterval(()=>{\r\n\r\n      props.setarSegundos(props.segundos-1);\r\n       \r\n      if(props.segundos <= 0){\r\n        if(props.minutos > 0){\r\n          props.setarMinutos(minutos - 1);\r\n          props.setarSegundos(59);\r\n        }else {\r\n          if(!done){\r\n            done = true;\r\n            props.setarEstado('selecionar');\r\n            props.setarMinutos(0);\r\n            props.setarSegundos(1);\r\n            playSound();\r\n          }\r\n        }\r\n      }      \r\n    },1000)\r\n\r\n    return () => clearInterval(timer);\r\n  })\r\n\r\n  async function playSound(){\r\n    const sound = new Audio.Sound();\r\n    try {\r\n      var alarme;\r\n      props.alarmes.map(function(val){\r\n        if(val.selecionado){\r\n          alarme = val.file;\r\n        }\r\n      })\r\n      await sound.loadAsync(alarme );\r\n      await sound.playAsync();\r\n      // Your sound is playing!\r\n\r\n      // Don't forget to unload the sound from memory\r\n      // when you are done using the Sound object\r\n      //await sound.unloadAsync();\r\n    }catch (error) {\r\n      // An error occurred!\r\n    }\r\n  }\r\n\r\n  function resetar(){\r\n    props.setarEstados('selecionar');\r\n    props.setarMinutos(0);\r\n    props.setarSegundos(1);\r\n  }\r\n\r\n  function formatarNumero(number){\r\n    var finalNumber = '';\r\n    if(number < 10){\r\n      finalNumber = '0'+number;\r\n    }else {\r\n      finalNumber = number;\r\n    }\r\n    return finalNumber\r\n  }\r\n\r\n  var segundos = formatarNumero(props.segundos);\r\n  var minutos = formatarNumero(props.minutos);\r\n  \r\n  return(\r\n    <View style={styles.container}>\r\n      <StatusBar style=\"auto\" />\r\n      <LinearGradient\r\n      colors={['rgba(201, 42, 114, 1)', 'rgba(232, 126, 25, 0.9)']}\r\n      style={{\r\n      position:'absolute',\r\n      left:0,\r\n      right:0,\r\n      top:0,\r\n      height:'100%',\r\n      }}\r\n      />\r\n      <View style={{flexDirection:'row'}}>\r\n        <Text style={styles.textContador}>{minutos} : </Text>\r\n        <Text style={styles.textContador}>{segundos}</Text>\r\n      </View>\r\n\r\n      \r\n      <TouchableOpacity onPress={()=>resetar()} style={styles.btnIniciar}>\r\n        <LinearGradient\r\n        colors={['rgba(232, 126, 25, 0.9)', 'rgba(201, 42, 114, 1)']}\r\n        style={{\r\n            position:'absolute',\r\n            left:0,\r\n            right:0,\r\n            top:0,\r\n            borderRadius:50,\r\n            height:'100%',\r\n            zIndex:1\r\n        }}\r\n        />\r\n        <Text style={{textAlign:'center', marginTop: 30, fontSize:22, color:'white', zIndex:2}}>RESETAR</Text>\r\n      </TouchableOpacity>\r\n\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center', \r\n  },\r\n  textContador: {\r\n    color:'white',\r\n    fontSize:70\r\n  },\r\n  btnIniciar: {\r\n    width:100,\r\n    height:100,\r\n    borderRadius:50,\r\n    borderColor:'white',\r\n    borderWidth:2,\r\n    marginTop:30,\r\n  },\r\n});","import { Audio } from 'expo-av';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Alert, TextInput, Pressable, TouchableHighlight, Modal, ScrollView, \n  Text, View, ImageBackground, TouchableOpacity, Picker, Image } from 'react-native';\nimport { useFonts } from 'expo-font';\nimport { Aclonica_400Regular} from '@expo-google-fonts/aclonica';\nimport React, {useState, useEffect} from 'react';\nimport Contador from './Contador';\n//import { AntDesign } from '@expo/vector-icons';\n\nexport default function App() {\n  \n  const [estado, setarEstado] = useState('selecionar');\n  const [segundos, setarSegundos] = useState(1);\n  const [minutos, setarMinutos] = useState(0);\n \n  const [alarmeSound, setarAlarmeSound] = useState([\n    {\n      id:1,\n      selecionado:true, \n      som:'Alarme 1',\n      file: require('./assets/alarme1.mp3')\n    },\n    {\n      id:2,\n      selecionado:false, \n      som:'Alarme 2',\n      file: require('./assets/alarme2.mp3')\n    },\n    {\n      id:3,\n      selecionado:false, \n      som:'Alarme 3',\n      file: require('./assets/alarme3.mp3')\n    },\n  ]);\n\n \n  function setarAlarme(id){\n    let alarmesTemp = alarmeSound.map(function(val){\n      if(id != val.id)  \n        val.selecionado = false;\n      else\n        val.selecionado = true;\n      return val;\n    })\n\n    setarAlarmeSound(alarmesTemp);\n  }\n\n  if(estado == 'selecionar'){\n  return (\n    <View style={styles.container} >\n      <LinearGradient\n        colors={['rgba(201, 42, 114, 1)', 'rgba(232, 126, 25, 0.9)']}\n        style={{\n          position:'absolute',\n          left:0,\n          right:0,\n          top:0,\n          height:'100%',\n        }}\n      />\n      <StatusBar style=\"auto\" />\n\n      <View>\n        <Text style={{color:'rgba(106, 156, 153, 1)',backgroundColor:'rgba(157, 252, 246, 1)', fontFamily:'Aclonica_400Regular', fontSize:50}}>Selecione o Tempo</Text>\n      </View>  \n\n      <View style={{flexDirection:'row', alignItems:'center', backgroundColor:'rgba(0,60,19,0.6)', padding:15}}>\n        \n          <Text>Min:</Text>\n          <TextInput \n            onChangeText={setarMinutos} \n            value={minutos} \n            style={{width:40, backgroundColor:('rgba(0,0,0,0.6)'), textAlign:'center', marginRight:10}}\n          ></TextInput>\n        \n          <Text>Seg:</Text>\n          <TextInput \n            onChangeText={setarSegundos} \n            value={segundos} \n            style={{width:40, backgroundColor:('rgba(0,0,0,0.6)'), textAlign:'center'}}\n          ></TextInput>\n        \n      </View>\n\n      <View style={{flexDirection:'row'}}>\n        {\n        alarmeSound.map(function(val){\n          if(val.selecionado){\n            return(\n              <TouchableOpacity onPress={()=>setarAlarme(val.id)} style={styles.bntSoundAlarmSelecionado}>\n                <Text style={{color:'white', fontSize:18}}>{val.som}</Text>\n              </TouchableOpacity>\n            );\n          }else{\n            return(\n              <TouchableOpacity onPress={()=>setarAlarme(val.id)} style={styles.bntSoundAlarm}>\n                  <Text style={{color:'white', fontSize:18}}>{val.som}</Text>\n              </TouchableOpacity>\n            );\n          }\n        })\n        }\n      </View>\n\n      <TouchableOpacity onPress={()=>setarEstado('iniciar')} style={styles.btnIniciar}>\n        <LinearGradient\n          colors={['rgba(232, 126, 25, 0.9)', 'rgba(201, 42, 114, 1)']}\n          style={{\n            position:'absolute',\n            left:0,\n            right:0,\n            top:0,\n            borderRadius:50,\n            height:'100%',\n            zIndex:1\n          }}\n        />\n        <Text style={{textAlign:'center', marginTop: 30, fontSize:22, color:'white', zIndex:2}}>INICIAR</Text>\n      </TouchableOpacity>\n    </View>\n  );\n  }else if(estado == 'iniciar'){\n    return(\n      <Contador \n        alarmes={alarmeSound} \n        setarMinutos={setarMinutos} \n        setarSegundos={setarSegundos} \n        setarEstado={setarEstado} \n        minutos={minutos} \n        segundos={segundos}\n      ></Contador>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center', \n  },\n  btnIniciar: {\n    width:100,\n    height:100,\n    borderRadius:50,\n    borderColor:'white',\n    borderWidth:2,\n    marginTop:30,\n  },\n  bntSoundAlarm: {\n    padding:8,\n    marginRight:20,\n    marginTop:15,\n    backgroundColor:'rgba(0, 0, 0, 0.3)',\n    borderColor:'rgba(0,0,0,0.5)',\n    borderWidth:1,\n  },\n  bntSoundAlarmSelecionado: {\n    padding:8,\n    marginRight:20,\n    marginTop:15,\n    backgroundColor:'rgba(0, 0, 0, 0.5)',\n    borderColor:'rgba(0,0,0,0.5)',\n    borderWidth:1,\n  },\n});\n\n\n"],"sourceRoot":""}